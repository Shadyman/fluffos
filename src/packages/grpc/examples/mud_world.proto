syntax = "proto3";

package mudlib.world;

// World/Room Management Service
service WorldService {
  // Room operations
  rpc GetRoom(RoomRequest) returns (RoomResponse);
  rpc UpdateRoom(UpdateRoomRequest) returns (RoomResponse);
  rpc CreateRoom(CreateRoomRequest) returns (RoomResponse);
  rpc DeleteRoom(RoomRequest) returns (StatusResponse);
  
  // Room queries
  rpc FindRooms(RoomSearchRequest) returns (RoomListResponse);
  rpc GetAreaRooms(AreaRequest) returns (RoomListResponse);
  rpc GetConnectedRooms(RoomRequest) returns (RoomListResponse);
  
  // Object management
  rpc GetRoomObjects(RoomRequest) returns (ObjectListResponse);
  rpc AddObjectToRoom(AddObjectRequest) returns (StatusResponse);
  rpc RemoveObjectFromRoom(RemoveObjectRequest) returns (StatusResponse);
  
  // Player movement
  rpc MovePlayer(MovePlayerRequest) returns (MovePlayerResponse);
  rpc GetPlayersInRoom(RoomRequest) returns (PlayerListResponse);
}

// Room identification
message RoomRequest {
  string room_id = 1;
  optional string room_path = 2;
}

// Room data
message RoomResponse {
  string room_id = 1;
  string room_path = 2;
  string short_description = 3;
  string long_description = 4;
  string area = 5;
  repeated Exit exits = 6;
  repeated string items = 7;
  repeated string npcs = 8;
  repeated string players = 9;
  map<string, string> properties = 10;
  string climate = 11;
  string terrain = 12;
  bool safe_room = 13;
  int32 light_level = 14;
}

// Exit information
message Exit {
  string direction = 1;
  string destination = 2;
  string description = 3;
  bool blocked = 4;
  string key_required = 5;
  bool hidden = 6;
}

// Room creation
message CreateRoomRequest {
  string room_path = 1;
  string short_description = 2;
  string long_description = 3;
  string area = 4;
  repeated Exit exits = 5;
  string climate = 6;
  string terrain = 7;
  map<string, string> properties = 8;
}

// Room updates
message UpdateRoomRequest {
  string room_id = 1;
  optional string short_description = 2;
  optional string long_description = 3;
  repeated Exit exits = 4;
  map<string, string> properties = 5;
  optional int32 light_level = 6;
}

// Room search
message RoomSearchRequest {
  optional string area = 1;
  optional string terrain = 2;
  optional string climate = 3;
  optional string description_pattern = 4;
  optional bool safe_rooms_only = 5;
  int32 limit = 6;
}

message RoomListResponse {
  repeated RoomResponse rooms = 1;
  int32 total_count = 2;
}

// Area request
message AreaRequest {
  string area_name = 1;
  optional bool include_subAreas = 2;
}

// Object management
message ObjectListResponse {
  repeated WorldObject objects = 1;
}

message WorldObject {
  string object_id = 1;
  string object_path = 2;
  string name = 3;
  string description = 4;
  string type = 5;
  map<string, string> properties = 6;
  bool moveable = 7;
  int32 weight = 8;
  int32 value = 9;
}

message AddObjectRequest {
  string room_id = 1;
  string object_path = 2;
  int32 quantity = 3;
  map<string, string> properties = 4;
}

message RemoveObjectRequest {
  string room_id = 1;
  string object_id = 2;
  optional int32 quantity = 3;
}

// Player movement
message MovePlayerRequest {
  string player_name = 1;
  string from_room = 2;
  string to_room = 3;
  string movement_type = 4; // walk, teleport, summon, etc.
  bool force_move = 5;
}

message MovePlayerResponse {
  bool success = 1;
  string error_message = 2;
  string final_location = 3;
  repeated string movement_messages = 4;
}

message PlayerListResponse {
  repeated string player_names = 1;
  int32 count = 2;
}

// Generic status response
message StatusResponse {
  bool success = 1;
  string message = 2;
  int32 error_code = 3;
}